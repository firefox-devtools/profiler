{
  "presets": [
    [
      "@babel/preset-env",
      {
        // Allow `@babel/preset-env` to import polyfills from core-js as needed.
        "useBuiltIns": "usage",
        // Help `@babel/preset-env` make use of the correct core-js polyfills.
        "corejs": "3.9",
        // Perform transforms closest to targets defined in `.browserslistrc`.
        "bugfixes": true
      }
    ],
    [
      "@babel/preset-react",
      {
        // When spreading props, use inline object with spread elements
        // directly instead of Babel's `extend` helper or `Object.assign`.
        "useSpread": true,
        // Automatically import 'react' into .tsx files.
        "runtime": "automatic"
      }
    ],
    [
      "@babel/preset-typescript",
      {
        "isTSX": true,
        "allExtensions": true
      }
    ]
  ],
  "plugins": [
    // Though `@babel/plugin-transform-class-properties` is already included
    // in `@babel/preset-env`, we include it specifically to be able to set
    // `loose` mode on it, without enabling it for all the plugins included
    // in `@babel/preset-env`.
    [
      "@babel/plugin-transform-class-properties",
      {
        // Without `loose`, the transformation uses `Object.defineProperty` which
        // obeys the spec more, but we get a bundle that's 8kB larger. That was the
        // default in babel v6.
        "loose": true
      }
    ],
    [
      "@babel/plugin-transform-private-methods",
      {
        // Like `plugin-transform-class-properties`, `loose` option is being used
        // inside of this plugin as well. These plugins must have the same value,
        // therefore it's set to true here.
        "loose": true
      }
    ],
    [
      "@babel/plugin-transform-private-property-in-object",
      {
        // Like `plugin-transform-class-properties`, `loose` option is being used
        // inside of this plugin as well. These plugins must have the same value,
        // therefore it's set to true here.
        "loose": true
      }
    ],
    [
      "module-resolver",
      {
        "alias": {
          "firefox-profiler": "./src",
          "firefox-profiler-res": "./res"
        }
      }
    ]
  ]
}
