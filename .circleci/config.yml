version: 2.1

executors:
  node:
    docker:
      - image: cimg/node:22.14
  base:
    docker:
      - image: cimg/base:stable

orbs:
  shellcheck: circleci/shellcheck@2.0.0

commands:
  checkout-and-dependencies:
    description: 'Checkout and install dependencies, managing a cache'
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - v2-dependencies-{{ checksum "package.json" }}
            - v2-dependencies-
      # With --frozen-lockfile, the installation will fail if the lockfile is
      # outdated compared to package.json.
      - run: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}

# Important: if you add a job here, don't forget to add it to the workflow below too.
jobs:
  lint:
    executor: node
    resource_class: large
    steps:
      - checkout-and-dependencies
      - run: yarn lint

  tests:
    executor: node
    resource_class: large
    steps:
      - checkout-and-dependencies
      # We use workerIdleMemoryLimit to work around a memory issue with node.
      # See https://github.com/facebook/jest/issues/11956
      - run: yarn test --coverage --logHeapUsage -w=4 --workerIdleMemoryLimit=1.5G
      - run: yarn codecov

  build-prod:
    executor: node
    resource_class: large
    steps:
      - checkout-and-dependencies
      - run: yarn build-prod:quiet
      - run: yarn build-symbolicator-cli:quiet

  licence-check:
    executor: node
    steps:
      - checkout-and-dependencies
      - run: yarn license-check

  flow:
    executor: node
    resource_class: large
    steps:
      - checkout-and-dependencies
      - run: yarn flow:ci

  alex:
    executor: node
    steps:
      - checkout-and-dependencies
      - run: yarn test-alex

  yarn_lock:
    executor: node
    steps:
      - checkout-and-dependencies
      - run: yarn test-lockfile

  # This is implemented as a separate job instead of using the orb's predefined
  # job so that we can have a more descriptive name when reported to github.
  # See also https://github.com/CircleCI-Public/shellcheck-orb/issues/29
  shellcheck:
    executor: base
    steps:
      - checkout
      - shellcheck/install
      - shellcheck/check:
          dir: ./bin

  l10n-sync:
    executor: node
    steps:
      - add_ssh_keys:
          fingerprints:
            - '92:e1:5d:84:70:96:c5:19:76:55:1c:b1:7a:12:9e:53'
      - checkout
      - run: git config user.email "perf-html@mozilla.com"
      - run: git config user.name "Firefox Profiler [bot]"
      - run: node ./bin/l10n-sync.js -y

workflows:
  version: 2
  main:
    jobs:
      - tests
      - lint
      - build-prod
      - flow
      - licence-check
      - alex
      - yarn_lock
      - shellcheck

  l10n-sync:
    triggers:
      - schedule:
          # CircleCI is using UTC timezone. So, this will be triggered at 8 AM UTC every day.
          cron: '0 8 * * *'
          filters:
            branches:
              only:
                - main
    jobs:
      - tests
      - l10n-sync:
          requires:
            - tests
